name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}
permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        if: ${{ env.GITHUB_ACTOR != 'nektos/act' }}
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        if: ${{ env.GITHUB_ACTOR != 'nektos/act' }}
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔎 Type check
        run: npm run typecheck --if-present

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://lab_user:lab_pass@localhost/lab_test
      SESSION_SECRET: asdf_secret
    steps:
      - name: 🛑 Cancel Previous Runs
        if: ${{ env.GITHUB_ACTOR != 'nektos/act' }}
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "12"
          postgresql db: lab_test
          postgresql user: lab_user
          postgresql password: lab_pass

      - name: 🛠 Setup Database
        run: npx prisma migrate reset --force

      - name: ⚡ Run vitest
        run: npm run test -- --coverage

  cypress:
    name: ⚫️ Cypress
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://lab_user:lab_pass@localhost/lab_test
      SESSION_SECRET: asdf_secret
      BASE_URL: http://localhost:3000
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
    steps:
      - name: 🛑 Cancel Previous Runs
        if: ${{ env.GITHUB_ACTOR != 'nektos/act' }}
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "12"
          postgresql db: lab_test
          postgresql user: lab_user
          postgresql password: lab_pass

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🛠 Setup Database
        run: npx prisma migrate reset --force

      - name: ⚙️ Build
        run: npm run build

      - name: 🌳 Cypress run
        uses: cypress-io/github-action@v5
        with:
          install: false
          start: npm run start:mocks
          wait-on: "http://localhost:8811"
        env:
          PORT: "8811"

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [lint, typecheck, vitest, cypress]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    env:
      NODE_ENV: production

    steps:
      - name: 🛑 Cancel Previous Runs
        if: ${{ env.GITHUB_ACTOR != 'nektos/act' }}
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app props
        uses: Muchaszewski/read-json-action@1.0.0
        id: app_props
        with:
          path: "package.json"
          properties: "[name, engines.node]"

      - name: 🙊 Create .env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DATABASE_URL: postgresql://admin:password@localhost/projectlab
          envkey_SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          envkey_BASE_URL: ${{ secrets.BASE_URL }}
          envkey_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          envkey_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          envkey_AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          envkey_GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          envkey_PORT: 80

      - name: Prepare Server For Build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm -rf ~/projectlab/tmp

      - name: Copy Files To Lightsail Instance
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: ${{ secrets.LIGHTSAIL_USER }}
          server: ${{ secrets.LIGHTSAIL_IP }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: "./*"
          remote_path: "/home/admin/projectlab/tmp/"
          args: "-o ConnectTimeout=60"

      - name: Configure Server
        uses: appleboy/ssh-action@master
        env:
          DB_URL: ${{ secrets.DB_URL }}
        with:
          timeout: 60s
          command_timeout: 30m
          envs: DB_URL
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            pm2 stop all

            echo "*** Step: *** Replace app folders"
            rm -rf ~/projectlab/app
            mkdir -p ~/projectlab/app
            cp -R ~/projectlab/tmp/. ~/projectlab/app/
            cd ~/projectlab/app

            npm ci # install

            echo "*** Step: *** Load prod database and run migrations and seeds"
            pg_dump --dbname $DB_URL --clean --if-exists > db.sql
            psql -d "postgresql://admin:password@localhost/projectlab" < db.sql
            npx -y prisma migrate deploy # first npx with -y to avoid prompt to install
            npx prisma db seed -f
            npx prisma db seed -f prisma/seeds.prod.ts

            pm2 start ecosystem.config.js
            pm2 save

            echo "*** Step: ** Cleanup"
            rm -rf ~/projectlab/tmp
